#!/bin/bash

# change to the directory where the script lives, so that the relative paths all work
cd `dirname $0`

# check that the user is root
if [ "$(id -u)" != "0" ]
then
 echo "You must be root to run this script. Installation failed."
 exit 9
fi

# remove any previous versions
uninstall_called=0
if [ -x ./uninstall-csx ]
then 
 # Set flag so we dont do a clean later
 uninstall_called=1
 ./uninstall-csx
 if [ $? != 0 ]
 then
  echo "csx driver uninstall failed."
  exit 9
 fi
fi

KRELEASE=`uname -r`

# Check to see if the kernel source files are installed ( be more polite if they are not )
inc_present=`ls -al /lib/modules/$KRELEASE/build/include/linux/version.h 2>/dev/null|wc -l`
if [ $inc_present -eq 0 ]
then
  echo
  echo "Kernel headers are NOT present for this kernel version ("`uname -r`")"
  echo "Please install the correct kernel source headers"
  echo "Contact your system administrator for help with this if needed"
  echo
  echo "Once the kernel headers have been installed please try installing the driver again"
  echo

  exit 9
fi


# Check to make sure the rpm installed matches in processor type ( eg. 32bit/64bit ) with what we are running on
# Do a 'file' on csreset and extract its processor architecture and convert the '-' and '_' to the same in both
# Do a 'uname -a' and extract the host processor architecture and convert the '-' and '_' to the same in both
if [ -x ../../bin/csreset ]
then
 file_type_long=`/usr/bin/file ../../bin/csreset`
 file_type=`echo $file_type_long|cut -f 7 -d ' '|cut -f 1 -d ','|sed 's/-/_/g'|rev|cut -b 1-3|rev`
 uname_type=`uname -i |rev|cut -b 1-3|rev`

 # Compare the 2, throw error if they don't match
 # GRM - commented out
 #if [ $file_type == $uname_type ]
 #then
 #  echo
 #else
 #  echo
 #  echo "ERROR - your operating system type does not match the rpm target type"
 #  echo "This machine is "`uname -i`
 #  echo "The rpm type is "`echo $file_type_long|cut -f 2- -d ':'`
 #  echo "Please check the rpm type you installed. This rpm MUST be uninstalled and the correct one installed"
 #  echo 
 #
 # exit 9
 #fi
fi

# make kernel driver
# only clean here if we didn't call the uninstall earlier ( so we don't clean twice )
if [ $uninstall_called -eq 0 ]
then
  make RELEASE=$KRELEASE clean
fi

make RELEASE=$KRELEASE
if [ $? != 0 ]
then
 echo "csx kernel driver compilation FAILED. See previous output for details. Installation failed."
 exit 9
fi


# copy the plugin module
if  echo $KRELEASE | grep "^2\.4" > /dev/null
then 
  suffix=o
else 
  suffix=ko
fi

mkdir -p /lib/modules/$KRELEASE/kernel/drivers/misc/
cp csx.$suffix /lib/modules/$KRELEASE/kernel/drivers/misc/
/sbin/depmod

# install the init.d script
echo "#! /bin/sh" > /etc/init.d/csx
echo "#" >> /etc/init.d/csx
CSBOARD_CONFIG=$PWD/../../bin/csboard_config
echo "CSBOARD_CONFIG=$CSBOARD_CONFIG" >> /etc/init.d/csx
echo "#" >> /etc/init.d/csx
cat csx >>  /etc/init.d/csx

chmod +x /etc/init.d/csx

if [ -x /usr/lib/lsb/install_initd ]
then 
  /usr/lib/lsb/install_initd /etc/init.d/csx
elif [ -x /sbin/chkconfig ]
then 
  /sbin/chkconfig --add csx
else
  echo Platform not supported for init.d installation
fi

/etc/init.d/csx start
